{"version":3,"sources":["src/app/components/product/dialog-box/dialog-box.component.html","src/app/components/product/product.component.html","src/app/components/product/dialog-box/dialog-box.component.css","src/app/components/product/dialog-box/dialog-box.component.ts","src/app/components/product/product-routing.module.ts","src/app/components/product/product.component.css","src/app/components/product/product.component.ts","src/app/components/product/product.module.ts","src/app/models/product.ts","src/app/services/product/product.service.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<!-- dialog-box.component.html -->\\r\\n<h1 mat-dialog-title><strong>{{action}}</strong></h1>\\r\\n<form [formGroup]=\\\"form\\\" class=\\\"fields-content\\\" mat-dialog-content *ngIf=\\\"action != 'Delete'; else deleteTemplate\\\">\\r\\n  \\r\\n  <mat-form-field>\\r\\n    <input placeholder=\\\"Product Name\\\" matInput formControlName=\\\"productName\\\" class=\\\"form-control\\\">\\r\\n    <mat-error class=\\\"error-message\\\" *ngIf=\\\"form.get('productName').errors\\\">required field *</mat-error>\\r\\n  </mat-form-field>\\r\\n\\r\\n  <mat-form-field>\\r\\n    <input placeholder=\\\"Price\\\" matInput formControlName=\\\"price\\\" class=\\\"form-control\\\">\\r\\n  </mat-form-field>\\r\\n\\r\\n  <mat-form-field>\\r\\n    <input placeholder=\\\"Product Detail\\\" matInput formControlName=\\\"detail\\\" class=\\\"form-control\\\">\\r\\n  </mat-form-field>\\r\\n\\r\\n</form>\\r\\n<ng-template #deleteTemplate>\\r\\n  Are you sure to delete this element? <b>{{local_data.productName}}</b>\\r\\n</ng-template>\\r\\n<div class=\\\"buttons-content\\\" mat-dialog-actions>\\r\\n  <button mat-button (click)=\\\"doAction()\\\">{{action}}</button>\\r\\n  <button mat-button (click)=\\\"closeDialog()\\\" mat-flat-button>Cancel</button>\\r\\n</div>\"","export default \"<app-header [header_title]=\\\"header_title\\\"></app-header>\\n\\n\\n\\n<table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\n  <!--- Note that these columns can be defined in any order.\\n        The actual rendered columns are set as a property on the row definition -->\\n\\n  <!-- Column -->\\n  <ng-container matColumnDef=\\\"productName\\\">\\n    <th mat-header-cell *matHeaderCellDef>Product Name</th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.productName}} </td>\\n  </ng-container>\\n\\n  <!-- Column -->\\n  <ng-container matColumnDef=\\\"price\\\">\\n    <th mat-header-cell *matHeaderCellDef>Price</th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.price}} </td>\\n  </ng-container>\\n\\n  <!-- Column -->\\n  <ng-container matColumnDef=\\\"detail\\\">\\n    <th mat-header-cell *matHeaderCellDef>Product Detail</th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.detail}} </td>\\n  </ng-container>\\n\\n\\n  <!-- Action Column -->\\n  <ng-container matColumnDef=\\\"action\\\">\\n    <th mat-header-cell *matHeaderCellDef>EDIT / DELETE</th>\\n    <td class=\\\"buttons-acction-container\\\" mat-cell *matCellDef=\\\"let element\\\" class=\\\"action-link\\\"> \\n      <button mat-icon-button (click)=\\\"openDialog('Edit',element)\\\">\\n        <mat-icon>edit</mat-icon>\\n      </button>\\n      <button mat-icon-button (click)=\\\"openDialog('Delete',element)\\\">\\n        <mat-icon>delete</mat-icon>\\n      </button> \\n    </td>\\n  </ng-container>\\n  \\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n</table>\\n\\n<button id=\\\"add-btn\\\" mat-mini-fab color=\\\"warn\\\" (click)=\\\"openDialog('Add',{})\\\">\\n  <mat-icon>add</mat-icon>\\n</button>\"","export default \".fields-content {\\r\\n    display: -webkit-box;\\r\\n    display: flex;\\r\\n    -webkit-box-orient: vertical;\\r\\n    -webkit-box-direction: normal;\\r\\n            flex-direction: column;\\r\\n}\\r\\n  \\r\\n.fields-content > * {\\r\\n    width: 100%;\\r\\n}\\r\\n  \\r\\n.buttons-content {\\r\\n    float: right;\\r\\n}\\r\\n  \\r\\n.mat-form-field{\\r\\n    margin-bottom: 15px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9wcm9kdWN0L2RpYWxvZy1ib3gvZGlhbG9nLWJveC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksb0JBQWE7SUFBYixhQUFhO0lBQ2IsNEJBQXNCO0lBQXRCLDZCQUFzQjtZQUF0QixzQkFBc0I7QUFDMUI7O0FBRUE7SUFDSSxXQUFXO0FBQ2Y7O0FBRUE7SUFDSSxZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksbUJBQW1CO0FBQ3ZCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9wcm9kdWN0L2RpYWxvZy1ib3gvZGlhbG9nLWJveC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZpZWxkcy1jb250ZW50IHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG59XHJcbiAgXHJcbi5maWVsZHMtY29udGVudCA+ICoge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbi5idXR0b25zLWNvbnRlbnQge1xyXG4gICAgZmxvYXQ6IHJpZ2h0O1xyXG59XHJcblxyXG4ubWF0LWZvcm0tZmllbGR7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxNXB4O1xyXG59Il19 */\"","import { Component, Inject, Optional } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Product } from 'src/app/models/product';\n\n\n@Component({\n  selector: 'app-dialog-box',\n  templateUrl: './dialog-box.component.html',\n  styleUrls: ['./dialog-box.component.css']\n})\n\nexport class DialogBoxComponent {\n  action:string;\n  local_data:any;\n  form;\n  \n  constructor(\n    private formBuilder: FormBuilder,\n    public dialogRef: MatDialogRef<DialogBoxComponent>,\n    //@Optional() is used to prevent error if no data is passed\n    @Optional() @Inject(MAT_DIALOG_DATA) public data: Product) {\n    this.local_data = {...data};\n    this.action = this.local_data.action;\n\n    this.form = formBuilder.group({\n      productName: [this.local_data.productName, Validators.required],\n      price:       [this.local_data.price],\n      detail:      [this.local_data.detail]\n    });\n  }\n\n  doAction(){\n    // stop here if form is invalid\n    if (this.form.invalid) {\n      return;\n    }\n    this.dialogRef.close({event:this.action,data:this.form.value});\n  }\n\n  closeDialog(){\n    this.dialogRef.close({event:'Cancel'});\n  }\n\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProductComponent } from './product.component';\n\n\nconst routes: Routes = [{path: '', component: ProductComponent}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ProductRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcHJvZHVjdC9wcm9kdWN0LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { productColumns, Product } from \"src/app/models/product\";\r\nimport { MatDialog, MatTable } from '@angular/material';\r\nimport { DialogBoxComponent } from './dialog-box/dialog-box.component';\r\nimport { ProductService } from 'src/app/services/product/product.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-product',\r\n  templateUrl: './product.component.html',\r\n  styleUrls: ['./product.component.css'],\r\n})\r\n\r\nexport class ProductComponent implements OnInit{\r\n  header_title = \"Products Storage\";\r\n  \r\n  dataSource = [];\r\n  displayedColumns = productColumns;\r\n\r\n  @ViewChild(MatTable,{static:true}) table: MatTable<any>;\r\n  constructor(public dialog: MatDialog, private productService: ProductService) {}\r\n\r\n  ngOnInit() {\r\n    this.productService.getAllProducts().subscribe(data => {\r\n      this.dataSource = data['products'];\r\n    });;\r\n  }\r\n \r\n  openDialog(action,obj) {\r\n    obj.action = action;\r\n    const dialogRef = this.dialog.open(DialogBoxComponent, {\r\n      width: '350px',\r\n      data:obj\r\n    });\r\n \r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if(result.event == 'Add'){\r\n        this.addRowData(result.data);\r\n      }else if(result.event == 'Edit'){\r\n        this.updateRowData(result.data);\r\n      }else if(result.event == 'Delete'){\r\n        this.deleteRowData(result.data);\r\n      }\r\n    });\r\n  }\r\n \r\n  addRowData(row_obj){\r\n    var product = {\r\n      productName: row_obj.productName,\r\n      price: row_obj.price,\r\n      detail: row_obj.detail,\r\n    } as Product\r\n    this.productService.createProduct(product);\r\n    this.dataSource.push(product);\r\n    //for update table rows when changes\r\n    this.table.renderRows();\r\n  }\r\n\r\n  updateRowData(row_obj){\r\n    var product = {\r\n      productName: row_obj.productName,\r\n      price: row_obj.price,\r\n      detail: row_obj.detail,\r\n    } as Product\r\n    this.dataSource = this.dataSource.filter(value =>{\r\n      if(value.productName == row_obj.productName){\r\n        value = product;\r\n      }\r\n      return true;\r\n    });\r\n    this.productService.updateProduct(product);\r\n    //for update table rows when changes\r\n    this.table.renderRows();\r\n  }\r\n\r\n  deleteRowData(row_obj){\r\n    this.dataSource = this.dataSource.filter(value =>{\r\n      return value.productName != row_obj.productName;\r\n    });\r\n    this.productService.deleteProduct(row_obj.productName);\r\n    //for update table rows when changes\r\n    this.table.renderRows();\r\n  }\r\n\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ProductRoutingModule } from './product-routing.module';\nimport { ProductComponent } from './product.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { DialogBoxComponent } from './dialog-box/dialog-box.component';\n\n\n@NgModule({\n  declarations: [\n    ProductComponent,\n    DialogBoxComponent\n  ],\n  imports: [\n    CommonModule,\n    ProductRoutingModule,\n    SharedModule\n  ],\n  entryComponents: [\n    DialogBoxComponent\n  ]\n})\nexport class ProductModule { }\n","export interface Product {\r\n    productName: string;\r\n    price: number;\r\n    detail: string;\r\n}\r\n\r\nexport const productColumns: string[] = [\r\n    'productName',\r\n    'price',\r\n    'detail',\r\n    'action'\r\n];","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Product } from 'src/app/models/product';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ProductService {\r\n  \r\n  constructor(private http: HttpClient) {}\r\n\r\n  url = 'http://127.0.0.1:5000/poc/v1';\r\n  \r\n  public getAllProducts() {\r\n    return this.http.get(`${this.url}/products/`);\r\n  }\r\n\r\n  public createProduct(product: Product) {\r\n    let httpHeaders = new HttpHeaders().set('Content-Type', 'application/json')\r\n    let options = {\r\n      headers: httpHeaders\r\n    }; \r\n    this.http.post(`${this.url}/product/`,{\r\n      \"productName\":product.productName,\r\n      \"price\": product.price,\r\n      \"detail\": product.detail\r\n    },options).subscribe(\r\n      (val) => {\r\n          console.log(\"POST call successful value returned in body\", val);\r\n      },\r\n      response => {\r\n          console.log(\"POST call in error\", response);\r\n      },\r\n      () => {\r\n          console.log(\"The POST observable is now completed.\");\r\n      });\r\n  }\r\n\r\n  public deleteProduct(id){\r\n    this.http.delete(`${this.url}/product/${id}`)\r\n    .subscribe(\r\n        (val) => {\r\n            console.log(\"DELETE call successful value returned in body\", val);\r\n        },\r\n        response => {\r\n            console.log(\"DELETE call in error\", response);\r\n        },\r\n        () => {\r\n            console.log(\"The DELETE observable is now completed.\");\r\n        });\r\n  }\r\n\r\n  public updateProduct(product: Product) {\r\n    let httpHeaders = new HttpHeaders().set('Content-Type', 'application/json')\r\n    let options = {\r\n      headers: httpHeaders\r\n    }; \r\n    this.http.put(`${this.url}/product/${product.productName}`,{\r\n      \"productName\":product.productName,\r\n      \"price\": product.price,\r\n      \"detail\": product.detail\r\n    },options).subscribe(\r\n      (val) => {\r\n          console.log(\"POST call successful value returned in body\", val);\r\n      },\r\n      response => {\r\n          console.log(\"POST call in error\", response);\r\n      },\r\n      () => {\r\n          console.log(\"The POST observable is now completed.\");\r\n      });\r\n  }\r\n\r\n\r\n\r\n}"],"sourceRoot":"webpack:///","file":"components-product-product-module-es5.js"}
{"version":3,"sources":["src/app/components/client/client.component.html","src/app/components/client/dialog-box/dialog-box.component.html","src/app/components/client/client-routing.module.ts","src/app/components/client/client.component.css","src/app/components/client/client.component.ts","src/app/components/client/client.module.ts","src/app/components/client/dialog-box/dialog-box.component.css","src/app/components/client/dialog-box/dialog-box.component.ts","src/app/models/client.ts","src/app/services/client/client.service.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<app-header [header_title]=\\\"header_title\\\"></app-header>\\n\\n\\n\\n<table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\n  <!--- Note that these columns can be defined in any order.\\n        The actual rendered columns are set as a property on the row definition -->\\n\\n  <!-- Column -->\\n  <ng-container matColumnDef=\\\"identityNumber\\\">\\n    <th mat-header-cell *matHeaderCellDef>Identity Number</th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.identityNumber}} </td>\\n  </ng-container>\\n\\n  <!-- Column -->\\n  <ng-container matColumnDef=\\\"clientName\\\">\\n    <th mat-header-cell *matHeaderCellDef>Client Name</th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.clientName}} </td>\\n  </ng-container>\\n\\n  <!-- Column -->\\n  <ng-container matColumnDef=\\\"clientSurname\\\">\\n    <th mat-header-cell *matHeaderCellDef>Client Surname</th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.clientSurname}} </td>\\n  </ng-container>\\n\\n  <!-- Column -->\\n  <ng-container matColumnDef=\\\"age\\\">\\n    <th mat-header-cell *matHeaderCellDef>Age</th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.age}} </td>\\n  </ng-container>\\n\\n\\n  <!-- Action Column -->\\n  <ng-container matColumnDef=\\\"action\\\">\\n    <th mat-header-cell *matHeaderCellDef>EDIT / DELETE</th>\\n    <td class=\\\"buttons-acction-container\\\" mat-cell *matCellDef=\\\"let element\\\" class=\\\"action-link\\\"> \\n      <button mat-icon-button (click)=\\\"openDialog('Edit',element)\\\">\\n        <mat-icon>edit</mat-icon>\\n      </button>\\n      <button mat-icon-button (click)=\\\"openDialog('Delete',element)\\\">\\n        <mat-icon>delete</mat-icon>\\n      </button> \\n    </td>\\n  </ng-container>\\n  \\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n</table>\\n\\n<button id=\\\"add-btn\\\" mat-mini-fab color=\\\"warn\\\" (click)=\\\"openDialog('Add',{})\\\">\\n  <mat-icon>add</mat-icon>\\n</button>\"","export default \"<!-- dialog-box.component.html -->\\r\\n<h1 mat-dialog-title><strong>{{action}}</strong></h1>\\r\\n<form [formGroup]=\\\"form\\\" class=\\\"fields-content\\\" mat-dialog-content *ngIf=\\\"action != 'Delete'; else deleteTemplate\\\">\\r\\n  \\r\\n  <mat-form-field>\\r\\n    <input placeholder=\\\"Identity Number\\\" matInput formControlName=\\\"identityNumber\\\" class=\\\"form-control\\\">\\r\\n    <mat-error class=\\\"error-message\\\" *ngIf=\\\"form.get('identityNumber').errors\\\">required field *</mat-error>\\r\\n  </mat-form-field>\\r\\n\\r\\n  <mat-form-field>\\r\\n    <input placeholder=\\\"Age\\\" matInput formControlName=\\\"age\\\" class=\\\"form-control\\\">\\r\\n  </mat-form-field>\\r\\n\\r\\n  <mat-form-field>\\r\\n    <input placeholder=\\\"Client Name\\\" matInput formControlName=\\\"clientName\\\" class=\\\"form-control\\\">\\r\\n  </mat-form-field>\\r\\n\\r\\n  <mat-form-field>\\r\\n    <input placeholder=\\\"client Surname\\\" matInput formControlName=\\\"clientSurname\\\" class=\\\"form-control\\\">\\r\\n  </mat-form-field>\\r\\n\\r\\n</form>\\r\\n<ng-template #deleteTemplate>\\r\\n  Are you sure to delete this element? <b>{{local_data.clientName}}</b>\\r\\n</ng-template>\\r\\n<div class=\\\"buttons-content\\\" mat-dialog-actions>\\r\\n  <button mat-button (click)=\\\"doAction()\\\">{{action}}</button>\\r\\n  <button mat-button (click)=\\\"closeDialog()\\\" mat-flat-button>Cancel</button>\\r\\n</div>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ClientComponent } from './client.component';\n\n\nconst routes: Routes = [{path: '', component: ClientComponent}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ClientRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY2xpZW50L2NsaWVudC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { clientColumns, Client } from \"src/app/models/client\";\r\nimport { MatDialog, MatTable } from '@angular/material';\r\nimport { DialogBoxComponent } from './dialog-box/dialog-box.component';\r\nimport { ClientService } from 'src/app/services/client/client.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-client',\r\n  templateUrl: './client.component.html',\r\n  styleUrls: ['./client.component.css'],\r\n})\r\n\r\nexport class ClientComponent implements OnInit{\r\n  header_title = \"Clients in our comerce\";\r\n  \r\n  dataSource = [];\r\n  displayedColumns = clientColumns;\r\n\r\n  @ViewChild(MatTable,{static:true}) table: MatTable<any>;\r\n  constructor(public dialog: MatDialog, private clientService: ClientService) {}\r\n\r\n  ngOnInit() {\r\n    this.clientService.getAllClients().subscribe(data => {\r\n      this.dataSource = data['clients'];\r\n    });;\r\n  }\r\n \r\n  openDialog(action,obj) {\r\n    obj.action = action;\r\n    const dialogRef = this.dialog.open(DialogBoxComponent, {\r\n      width: '350px',\r\n      data:obj\r\n    });\r\n \r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if(result.event == 'Add'){\r\n        this.addRowData(result.data);\r\n      }else if(result.event == 'Edit'){\r\n        this.updateRowData(result.data);\r\n      }else if(result.event == 'Delete'){\r\n        this.deleteRowData(result.data);\r\n      }\r\n    });\r\n  }\r\n \r\n  addRowData(row_obj){\r\n    var client = {\r\n      identityNumber: row_obj.identityNumber,\r\n      age: row_obj.age,\r\n      clientName: row_obj.clientName,\r\n      clientSurname: row_obj.clientSurname,\r\n    } as Client\r\n    this.clientService.createClient(client);\r\n    this.dataSource.push(client);\r\n    //for update table rows when changes\r\n    this.table.renderRows();\r\n  }\r\n\r\n  updateRowData(row_obj){\r\n    var client = {\r\n      identityNumber: row_obj.identityNumber,\r\n      age: row_obj.age,\r\n      clientName: row_obj.clientName,\r\n      clientSurname: row_obj.clientSurname,\r\n    } as Client\r\n    this.dataSource = this.dataSource.filter(value =>{\r\n      if(value.identityNumber == row_obj.identityNumber){\r\n        value = client;\r\n      }\r\n      return true;\r\n    });\r\n    this.clientService.updateClient(client);\r\n    //for update table rows when changes\r\n    this.table.renderRows();\r\n  }\r\n\r\n  deleteRowData(row_obj){\r\n    this.dataSource = this.dataSource.filter(value =>{\r\n      return value.identityNumber != row_obj.identityNumber;\r\n    });\r\n    this.clientService.deleteClient(row_obj.identityNumber);\r\n    //for update table rows when changes\r\n    this.table.renderRows();\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ClientRoutingModule } from './client-routing.module';\nimport { ClientComponent } from './client.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { DialogBoxComponent } from './dialog-box/dialog-box.component';\n\n\n@NgModule({\n  declarations: [\n    ClientComponent,\n    DialogBoxComponent\n  ],\n  imports: [\n    CommonModule,\n    ClientRoutingModule,\n    SharedModule\n  ],\n  entryComponents: [\n    DialogBoxComponent\n  ]\n})\nexport class ClientModule { }\n","export default \".fields-content {\\r\\n    display: -webkit-box;\\r\\n    display: flex;\\r\\n    -webkit-box-orient: vertical;\\r\\n    -webkit-box-direction: normal;\\r\\n            flex-direction: column;\\r\\n}\\r\\n  \\r\\n.fields-content > * {\\r\\n    width: 100%;\\r\\n}\\r\\n  \\r\\n.buttons-content {\\r\\n    float: right;\\r\\n}\\r\\n  \\r\\n.mat-form-field{\\r\\n    margin-bottom: 15px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9jbGllbnQvZGlhbG9nLWJveC9kaWFsb2ctYm94LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxvQkFBYTtJQUFiLGFBQWE7SUFDYiw0QkFBc0I7SUFBdEIsNkJBQXNCO1lBQXRCLHNCQUFzQjtBQUMxQjs7QUFFQTtJQUNJLFdBQVc7QUFDZjs7QUFFQTtJQUNJLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxtQkFBbUI7QUFDdkIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2NsaWVudC9kaWFsb2ctYm94L2RpYWxvZy1ib3guY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5maWVsZHMtY29udGVudCB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxufVxyXG4gIFxyXG4uZmllbGRzLWNvbnRlbnQgPiAqIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4uYnV0dG9ucy1jb250ZW50IHtcclxuICAgIGZsb2F0OiByaWdodDtcclxufVxyXG5cclxuLm1hdC1mb3JtLWZpZWxke1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTVweDtcclxufSJdfQ== */\"","import { Component, Inject, Optional } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Client } from 'src/app/models/client';\n\n\n@Component({\n  selector: 'app-dialog-box',\n  templateUrl: './dialog-box.component.html',\n  styleUrls: ['./dialog-box.component.css']\n})\n\nexport class DialogBoxComponent {\n  action:string;\n  local_data:any;\n  form;\n  \n  constructor(\n    private formBuilder: FormBuilder,\n    public dialogRef: MatDialogRef<DialogBoxComponent>,\n    //@Optional() is used to prevent error if no data is passed\n    @Optional() @Inject(MAT_DIALOG_DATA) public data: Client) {\n    this.local_data = {...data};\n    this.action = this.local_data.action;\n\n    this.form = formBuilder.group({\n      identityNumber: [this.local_data.identityNumber, Validators.required],\n      age:            [this.local_data.age],\n      clientName:     [this.local_data.clientName],\n      clientSurname:  [this.local_data.clientSurname]\n    });\n  }\n\n  doAction(){\n    // stop here if form is invalid\n    if (this.form.invalid) {\n      return;\n    }\n    this.dialogRef.close({event:this.action,data:this.form.value});\n  }\n\n  closeDialog(){\n    this.dialogRef.close({event:'Cancel'});\n  }\n\n}","export interface Client {\r\n    identityNumber: number;\r\n    age: number;\r\n    clientName: string;\r\n    clientSurname: string;\r\n}\r\n\r\nexport const clientColumns: string[] = [\r\n    'identityNumber',\r\n    'age',\r\n    'clientName',\r\n    'clientSurname',\r\n    'action'\r\n];\r\n\r\nexport const CLIENTS_DATA: Client[] = [\r\n    {\r\n        identityNumber: 1234565,\r\n        age: 12,\r\n        clientName: \"David\",\r\n        clientSurname: \"Tamayo Tirado\"\r\n    },\r\n    {\r\n        identityNumber: 12333333,\r\n        age: 12,\r\n        clientName: \"Alejandro\",\r\n        clientSurname: \"Tamayo Tirado\"\r\n    }\r\n];","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Client } from \"src/app/models/client\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ClientService {\r\n  \r\n  constructor(private http: HttpClient) {}\r\n\r\n  url = 'http://127.0.0.1:5000/poc/v1';\r\n  \r\n  public getAllClients() {\r\n    return this.http.get(`${this.url}/clients/`);\r\n  }\r\n\r\n  public createClient(client: Client) {\r\n    let httpHeaders = new HttpHeaders().set('Content-Type', 'application/json')\r\n    let options = {\r\n      headers: httpHeaders\r\n    }; \r\n    this.http.post(`${this.url}/client/`,{\r\n      \"identityNumber\":client.identityNumber,\r\n      \"age\": client.age,\r\n      \"clientName\": client.clientName,\r\n      \"clientSurname\": client.clientSurname\r\n    },options).subscribe(\r\n      (val) => {\r\n          console.log(\"POST call successful value returned in body\", val);\r\n      },\r\n      response => {\r\n          console.log(\"POST call in error\", response);\r\n      },\r\n      () => {\r\n          console.log(\"The POST observable is now completed.\");\r\n      });\r\n  }\r\n\r\n  public deleteClient(id){\r\n    this.http.delete(`${this.url}/client/${id}`)\r\n    .subscribe(\r\n        (val) => {\r\n            console.log(\"DELETE call successful value returned in body\", val);\r\n        },\r\n        response => {\r\n            console.log(\"DELETE call in error\", response);\r\n        },\r\n        () => {\r\n            console.log(\"The DELETE observable is now completed.\");\r\n        });\r\n  }\r\n\r\n  public updateClient(client: Client) {\r\n    let httpHeaders = new HttpHeaders().set('Content-Type', 'application/json')\r\n    let options = {\r\n      headers: httpHeaders\r\n    }; \r\n    this.http.put(`${this.url}/client/${client.identityNumber}`,{\r\n      \"identityNumber\":client.identityNumber,\r\n      \"age\": client.age,\r\n      \"clientName\": client.clientName,\r\n      \"clientSurname\": client.clientSurname\r\n    },options).subscribe(\r\n      (val) => {\r\n          console.log(\"POST call successful value returned in body\", val);\r\n      },\r\n      response => {\r\n          console.log(\"POST call in error\", response);\r\n      },\r\n      () => {\r\n          console.log(\"The POST observable is now completed.\");\r\n      });\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}"],"sourceRoot":"webpack:///","file":"components-client-client-module-es5.js"}